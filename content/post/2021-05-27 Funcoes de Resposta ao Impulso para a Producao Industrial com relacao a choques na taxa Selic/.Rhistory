library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
theme_set(theme_classic())
theme_update(panel.grid.major.y = element_line(linetype = "dotted", color = "gray70"),
axis.title = element_text(size = 9, color = "black"),
axis.text = element_text(size = 8, color = "black"),
plot.title = element_text(size = 12, color = 'black'),
plot.caption = element_text(size = 13, color = 'black'),
plot.subtitle = element_text(size = 13, color = 'black'))
code <- c(selic_daily = 1178)
juros_db <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
install.packages("sidrar")
install.packages("vars")
install.packages("rbcb")
install.packages("fredr")
library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
theme_set(theme_classic())
theme_update(panel.grid.major.y = element_line(linetype = "dotted", color = "gray70"),
axis.title = element_text(size = 9, color = "black"),
axis.text = element_text(size = 8, color = "black"),
plot.title = element_text(size = 12, color = 'black'),
plot.caption = element_text(size = 13, color = 'black'),
plot.subtitle = element_text(size = 13, color = 'black'))
code <- c(selic_daily = 1178)
juros_db <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
install.packages("rbcb")
## Calculando a mÃ©dia mensal
juros <- juros_db %>%
mutate(month = month(date), year = year(date)) %>%
group_by(month, year) %>%
summarise(selic = mean(selic_daily)) %>%
mutate(day = 1, date = as.Date(paste(year, month, day, sep = "-"))) %>%
ungroup() %>%
dplyr::select(date, selic) %>%
arrange(date)
install.packages("rbcb")
devtools::install_github('wilsonfreitas/rbcb')
code <- c(selic_daily = 1178)
juros_db <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
## Calculando a mÃ©dia mensal
juros <- juros_db %>%
mutate(month = month(date), year = year(date)) %>%
group_by(month, year) %>%
summarise(selic = mean(selic_daily)) %>%
mutate(day = 1, date = as.Date(paste(year, month, day, sep = "-"))) %>%
ungroup() %>%
dplyr::select(date, selic) %>%
arrange(date)
## Bens de capital, Bens intermediÃ¡rios, bens de consumo durÃ¡veis, bens de consumo semidurÃ¡veis e nÃ£o durÃ¡veis
pim_1 <-
'/t/3651/n1/all/v/3134/p/all/c543/129278,129283,129301,129305/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "Grandes categorias econÃ´micas", Valor) %>%
pivot_wider(names_from = "Grandes categorias econÃ´micas", values_from = Valor)
## IndÃºstria geral, extrativa e transformaÃ§Ã£o
pim_2 <-
'/t/3653/n1/all/v/3134/p/all/c544/129314,129315,129316/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "SeÃ§Ãµes e atividades industriais (CNAE 2.0)", Valor) %>%
pivot_wider(names_from = "SeÃ§Ãµes e atividades industriais (CNAE 2.0)", values_from = Valor)
## Calculando a mÃ©dia mensal
juros <- juros_db %>%
mutate(month = month(date), year = year(date)) %>%
group_by(month, year) %>%
summarise(selic = mean(selic_daily)) %>%
mutate(day = 1, date = as.Date(paste(year, month, day, sep = "-"))) %>%
ungroup() %>%
dplyr::select(date, selic) %>%
arrange(date)
## Bens de capital, Bens intermediÃ¡rios, bens de consumo durÃ¡veis, bens de consumo semidurÃ¡veis e nÃ£o durÃ¡veis
pim_1 <-
'/t/3651/n1/all/v/3134/p/all/c543/129278,129283,129301,129305/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "Grandes categorias econÃ´micas", Valor) %>%
pivot_wider(names_from = "Grandes categorias econÃ´micas", values_from = Valor)
library(tidyverse)
library(lubridate)
library(seasonal) # dessazonalizaÃ§Ã£o
library(readxl) # leitura de excel
library(sidrar) # dados do IBGE
library(rbcb) # dados do BCB
library(ipeadatar) # dados do ipeadata
library(fredr) # dados do FRED
library(urca) # testes de raiz unitÃ¡ria e cointegraÃ§Ã£o
library(vars) # modelagem de VAR
library(gridExtra) # juntar grÃ¡ficos em um grid
theme_set(theme_classic())
theme_update(panel.grid.major.y = element_line(linetype = "dotted", color = "gray70"),
axis.title = element_text(size = 9, color = "black"),
axis.text = element_text(size = 8, color = "black"),
plot.title = element_text(size = 12, color = 'black'),
plot.caption = element_text(size = 13, color = 'black'),
plot.subtitle = element_text(size = 13, color = 'black'))
code <- c(selic_daily = 1178)
juros_db <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
## Calculando a mÃ©dia mensal
juros <- juros_db %>%
mutate(month = month(date), year = year(date)) %>%
group_by(month, year) %>%
summarise(selic = mean(selic_daily)) %>%
mutate(day = 1, date = as.Date(paste(year, month, day, sep = "-"))) %>%
ungroup() %>%
dplyr::select(date, selic) %>%
arrange(date)
## Bens de capital, Bens intermediÃ¡rios, bens de consumo durÃ¡veis, bens de consumo semidurÃ¡veis e nÃ£o durÃ¡veis
pim_1 <-
'/t/3651/n1/all/v/3134/p/all/c543/129278,129283,129301,129305/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "Grandes categorias econÃ´micas", Valor) %>%
pivot_wider(names_from = "Grandes categorias econÃ´micas", values_from = Valor)
## IndÃºstria geral, extrativa e transformaÃ§Ã£o
pim_2 <-
'/t/3653/n1/all/v/3134/p/all/c544/129314,129315,129316/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "SeÃ§Ãµes e atividades industriais (CNAE 2.0)", Valor) %>%
pivot_wider(names_from = "SeÃ§Ãµes e atividades industriais (CNAE 2.0)", values_from = Valor)
## Juntando em uma tabela
PIM <- left_join(pim_2, pim_1, by = "date") %>%
rename("IndÃºstria geral" = "1 IndÃºstria geral",
"IndÃºstrias extrativas" = "2 IndÃºstrias extrativas",
"IndÃºstrias de transformaÃ§Ã£o" = "3 IndÃºstrias de transformaÃ§Ã£o",
"Bens de capital" = "1 Bens de capital",
"Bens intermediÃ¡rios" = "2 Bens intermediÃ¡rios",
"Bens de consumo durÃ¡veis" = "31 Bens de consumo durÃ¡veis",
"Bens de consumo nÃ£o durÃ¡veis" = "32 Bens de consumo semidurÃ¡veis e nÃ£o durÃ¡veis")
IPCA_SA <- get_sidra(api = "/t/118/n1/all/v/all/p/all/d/v306%202") %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, IPCA_M = Valor) %>%
dplyr::filter(date >= as.Date("2002-01-01"))
code <- c(cambio = 3698)
usd <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
code <- c(money_supply = 27841)
money <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
code <- c(credito = 21277)
credito <- rbcb::get_series(code, "2002-01-01") # baixa os dados do SGS do BCB
credito <- credito %>%
dplyr::mutate(credito_sa = final(seas(ts(credito, start = c(2002, 1), frequency = 12)))) %>% # dessazonalizaÃ§Ã£o
dplyr::select(date, credito_sa)
credito$credito_sa <- as.numeric(credito$credito_sa)
fredr_set_key("1234567890abcdefg") # inserir chave do API do FRED (veja detalhes do pacote)
fedfunds <- fredr(
series_id = "FEDFUNDS",
observation_start = as.Date("2002-01-01"),
observation_end = as.Date("2021-03-01")
) %>%
dplyr::select(date, value) %>%
rename(fedfunds = value)
commodities <- fredr(
series_id = "PALLFNFINDEXM",
observation_start = as.Date("2002-01-01"),
observation_end = as.Date("2021-03-01")
) %>%
dplyr::select(date, value)%>%
rename(commodities = value)
credito$credito_sa <- as.numeric(credito$credito_sa)
fredr_set_key("1234567890abcdefg") # inserir chave do API do FRED (veja detalhes do pacote)
fedfunds <- fredr(
series_id = "FEDFUNDS",
observation_start = as.Date("2002-01-01"),
observation_end = as.Date("2021-03-01")
) %>%
dplyr::select(date, value) %>%
rename(fedfunds = value)
commodities <- fredr(
series_id = "PALLFNFINDEXM",
observation_start = as.Date("2002-01-01"),
observation_end = as.Date("2021-03-01")
) %>%
dplyr::select(date, value)%>%
rename(commodities = value)
EMBI_db <- ipeadata("JPM366_EMBI366", quiet = FALSE) %>%
dplyr::select(date, value)
EMBI <- EMBI_db %>%
mutate(month = month(date), year = year(date)) %>%
group_by(month, year) %>%
summarise(EMBI = mean(value)) %>%
mutate(day = 1, date = as.Date(paste(year, month, day, sep = "-"))) %>%
ungroup() %>%
dplyr::select(date, EMBI) %>%
arrange(date) %>%
filter(date >= as.Date("2002-01-01"), date <= as.Date("2021-03-01"))
dummy_recession <- read_excel("rececoes_codace.xlsx")
dummy_recession$date <- as.Date(dummy_recession$date)
dummy_recession <- dummy_recession %>%
filter(date >= as.Date("2002-01-01"))
db_industry <- left_join(PIM, juros, by = 'date') %>%
left_join(IPCA_SA, by = 'date') %>%
left_join(usd, by = 'date') %>%
left_join(credito, by = 'date') %>%
left_join(money, by = 'date') %>%
dplyr::mutate(
log_money_supply = log(money_supply),
log_credito_sa = log(credito_sa),
log_cambio = log(cambio)
) %>% # transforma a inflaÃ§Ã£o, crÃ©dito e M1 para ln
dplyr::select(-cambio, -credito_sa, -money_supply)
## Bens de capital, Bens intermediÃ¡rios, bens de consumo durÃ¡veis, bens de consumo semidurÃ¡veis e nÃ£o durÃ¡veis
pim_1 <-
'/t/3651/n1/all/v/3134/p/all/c543/129278,129283,129301,129305/d/v3134%201' %>%
get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`MÃªs (CÃ³digo)`, format = '%Y%m')) %>%
dplyr::select(date, "Grandes categorias econÃ´micas", Valor) %>%
pivot_wider(names_from = "Grandes categorias econÃ´micas", values_from = Valor)
fedfunds <- fredr(
series_id = "FEDFUNDS",
observation_start = as.Date("2002-01-01"),
observation_end = as.Date("2021-03-01")
) %>%
dplyr::select(date, value) %>%
rename(fedfunds = value)
rlang::last_error()
