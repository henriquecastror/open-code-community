```r
# create each allocation strategy as a list of tickers and weights
golden_butterfly <- list(tickers = c("SHY", "TLT", "VTI", "IWN", "GLD"),
weights = c(0.20, 0.20, 0.20, 0.20, 0.20))
rob_arnott <- list(tickers = c("BNDX", "LQD", "VEU", "VNQ", "VNQ", "SPY", "TLT", "TIP", "DBC"),
weights = c(0.20, 0.20, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10))
globalAA <- list(tickers = c("SPY", "EFA", "EEM", "LQD", "BNDX", "TLT", "TIP", "DBC", "GLD", "VNQ"),
weights = c(0.18, 0.135, 0.045, 0.18, 0.144, 0.135, 0.018, 0.05, 0.05, 0.045))
permanent <- list(tickers = c("BIL", "GLD", "TLT", "SPY"),
weights = c(0.25, 0.25, 0.25, 0.25))
desert <- list(tickers = c("IEF", "VTI", "GLD"),
weights = c(0.60, 0.30, 0.10))
larry <- list(tickers = c("IWN", "DLS", "EEM", "IEF"),
weights = c(0.15, 0.075, 0.075, 0.70))
big_rocks <- list(tickers = c("AGG", "SPY", "IWD", "IWM", "IWN", "EFV", "VNQ", "EFA", "SCZ", "DLS", "EEM"),
weights = c(0.60, 0.06, 0.06, 0.06, 0.06, 0.04,0.04, 0.02, 0.02, 0.02, 0.02))
sandwich <- list(tickers = c("IEF", "SPY", "SCZ", "IWM", "EEM", "EFA", "VNQ", "BIL"),
weights = c(0.41, 0.20, 0.10, 0.08, 0.06, 0.06, 0.05, 0.04))
balanced_tax <- list(tickers = c("AGG", "SPY", "BIL", "EFA", "IWM", "VNQ", "DBC", "EEM" ),
weights = c(0.38, 0.15, 0.15, 0.13, 0.05, 0.05, 0.05, 0.04))
balanced <- list(tickers = c("AGG", "SPY", "BIL", "EFA", "IWM", "VNQ", "DBC", "EEM", "TIP", "BNDX", "HYG"),
weights = c(0.33, 0.15, 0.15, 0.13, 0.05, 0.05, 0.05, 0.04, 0.02, 0.02, 0.01))
income_gr <- list(tickers = c("AGG", "BIL", "TIP", "SPY", "EFA", "VNQ", "HYG", "BNDX", "IWM", "DBC"),
weights = c(0.37, 0.20, 0.10, 0.09, 0.08, 0.05, 0.04, 0.04, 0.02, 0.01))
income_gr_tax <- list(tickers = c("AGG", "BIL", "SPY", "EFA", "VNQ", "IWM", "DBC"),
weights = c(0.55, 0.20, 0.09, 0.08, 0.05, 0.02, 0.01))
con_income  <- list(tickers = c("AGG", "BIL", "TIP", "HYG", "VNQ", "BNDX"),
weights = c(0.40, 0.25, 0.18, 0.07, 0.05, 0.05))
con_income_tax  <- list(tickers = c("AGG", "BIL", "VNQ"),
weights = c(0.70, 0.25, 0.05))
all_weather  <- list(tickers = c("SPY", "TLT", "IEF", "GLD", "DBC"),
weights = c(0.30, 0.40, 0.15, 0.075, 0.075))
us_60_40 <- list(tickers = c("SPY", "IEF"),
weights = c(0.60, 0.40))
```
# get all the unique tickers
tickers <- unique(c(golden_butterfly$tickers,
rob_arnott$tickers,
globalAA$tickers,
permanent$tickers,
desert$tickers,
larry$tickers,
big_rocks$tickers,
sandwich$tickers,
balanced_tax$tickers,
balanced$tickers,
income_gr$tickers,
income_gr_tax$tickers,
con_income$tickers,
all_weather$tickers,
us_60_40$tickers))
# download prices for all tickers from Yahoo Finance
getSymbols(tickers, from = "2007-06-01", source = 'yahoo')
```
```r
# create each allocation strategy as a list of tickers and weights
golden_butterfly <- list(tickers = c("SHY", "TLT", "VTI", "IWN", "GLD"),
weights = c(0.20, 0.20, 0.20, 0.20, 0.20))
rob_arnott <- list(tickers = c("BNDX", "LQD", "VEU", "VNQ", "VNQ", "SPY", "TLT", "TIP", "DBC"),
weights = c(0.20, 0.20, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10, 0.10))
globalAA <- list(tickers = c("SPY", "EFA", "EEM", "LQD", "BNDX", "TLT", "TIP", "DBC", "GLD", "VNQ"),
weights = c(0.18, 0.135, 0.045, 0.18, 0.144, 0.135, 0.018, 0.05, 0.05, 0.045))
permanent <- list(tickers = c("BIL", "GLD", "TLT", "SPY"),
weights = c(0.25, 0.25, 0.25, 0.25))
desert <- list(tickers = c("IEF", "VTI", "GLD"),
weights = c(0.60, 0.30, 0.10))
larry <- list(tickers = c("IWN", "DLS", "EEM", "IEF"),
weights = c(0.15, 0.075, 0.075, 0.70))
big_rocks <- list(tickers = c("AGG", "SPY", "IWD", "IWM", "IWN", "EFV", "VNQ", "EFA", "SCZ", "DLS", "EEM"),
weights = c(0.60, 0.06, 0.06, 0.06, 0.06, 0.04,0.04, 0.02, 0.02, 0.02, 0.02))
sandwich <- list(tickers = c("IEF", "SPY", "SCZ", "IWM", "EEM", "EFA", "VNQ", "BIL"),
weights = c(0.41, 0.20, 0.10, 0.08, 0.06, 0.06, 0.05, 0.04))
balanced_tax <- list(tickers = c("AGG", "SPY", "BIL", "EFA", "IWM", "VNQ", "DBC", "EEM" ),
weights = c(0.38, 0.15, 0.15, 0.13, 0.05, 0.05, 0.05, 0.04))
balanced <- list(tickers = c("AGG", "SPY", "BIL", "EFA", "IWM", "VNQ", "DBC", "EEM", "TIP", "BNDX", "HYG"),
weights = c(0.33, 0.15, 0.15, 0.13, 0.05, 0.05, 0.05, 0.04, 0.02, 0.02, 0.01))
income_gr <- list(tickers = c("AGG", "BIL", "TIP", "SPY", "EFA", "VNQ", "HYG", "BNDX", "IWM", "DBC"),
weights = c(0.37, 0.20, 0.10, 0.09, 0.08, 0.05, 0.04, 0.04, 0.02, 0.01))
income_gr_tax <- list(tickers = c("AGG", "BIL", "SPY", "EFA", "VNQ", "IWM", "DBC"),
weights = c(0.55, 0.20, 0.09, 0.08, 0.05, 0.02, 0.01))
con_income  <- list(tickers = c("AGG", "BIL", "TIP", "HYG", "VNQ", "BNDX"),
weights = c(0.40, 0.25, 0.18, 0.07, 0.05, 0.05))
con_income_tax  <- list(tickers = c("AGG", "BIL", "VNQ"),
weights = c(0.70, 0.25, 0.05))
all_weather  <- list(tickers = c("SPY", "TLT", "IEF", "GLD", "DBC"),
weights = c(0.30, 0.40, 0.15, 0.075, 0.075))
us_60_40 <- list(tickers = c("SPY", "IEF"),
weights = c(0.60, 0.40))
```
```r
library(quantmod)
library(PerformanceAnalytics)
# get all the unique tickers
tickers <- unique(c(golden_butterfly$tickers,
rob_arnott$tickers,
globalAA$tickers,
permanent$tickers,
desert$tickers,
larry$tickers,
big_rocks$tickers,
sandwich$tickers,
balanced_tax$tickers,
balanced$tickers,
income_gr$tickers,
income_gr_tax$tickers,
con_income$tickers,
all_weather$tickers,
us_60_40$tickers))
# download prices for all tickers from Yahoo Finance
getSymbols(tickers, from = "2007-06-01", source = 'yahoo')
```
```r
# align all prices into one xts object
prices <- xts()
for (i in 1:length(tickers)){
prices  <- merge.xts(prices, get(tickers[i])[,6])
}
colnames(prices) <- tickers
# keep only month ends - could do it daily but who's got time?
prices <- prices[endpoints(prices, on = "months"),]
#calculate returns
returns <- CalculateReturns(prices)
# download risk-free (3-month Tbill from FRED) and align with monthly frequency
getSymbols("DGS3MO", src = "FRED")
```
```r
tbill <- DGS3MO[index(returns)]/100/12
```
```r
calculate_strat_returns <- function(strat, returns){
dates <- index(returns)
# convention: start the backtest when data for all assets is available
returns_strat <- returns[, strat$tickers]
first_index <- which.max((!is.na(rowSums(returns_strat))))
n_assets <- length(strat$tickers)
weights <- rbind(matrix(NA, nrow = first_index - 1, ncol = n_assets),
matrix(strat$weights, nrow = nrow(returns) - first_index + 1,
ncol = n_assets, byrow = TRUE))
strat_returns <- xts(rowSums(weights * returns_strat), order.by = index(returns))
return(strat_returns)
}
```
```r
strats <- c("golden_butterfly",
"rob_arnott",
"globalAA",
"permanent",
"desert",
"larry",
"big_rocks",
"sandwich",
"balanced_tax",
"balanced",
"income_gr",
"income_gr_tax",
"con_income",
"con_income_tax",
"all_weather",
"us_60_40")
# calculate returns of all strategies
strat_returns <- xts()
for (i in 1:length(strats)){
this_strat <- calculate_strat_returns(get(strats[i]), returns)
strat_returns <- merge.xts(strat_returns,
this_strat)
}
colnames(strat_returns) <- strats
```
```r
# calculate some statistics
table1 <- table.AnnualizedReturns(strat_returns, Rf = tbill)
table2 <- table.DownsideRiskRatio(strat_returns, MAR = mean(tbill))
table3 <- table.DownsideRisk(strat_returns, Rf = mean(tbill))
table_metrics <- rbind(table1,
table2[c("Annualised downside risk",
"Sortino ratio"), ],
table3[c("Historical VaR (95%)",
"Historical ES (95%)",
"Maximum Drawdown"),])
library(kableExtra)
kbl(t(table_metrics), caption =  "Performance metrics for buy & hold asset allocation strategies") %>%
kable_classic()
```
```r
# plot cumulative returns
chart.CumReturns(strat_returns,
begin = "axis",
legend.loc = "topleft")
```
```r
# drawdowns
chart.Drawdown(strat_returns,
legend.loc = "bottomright")
```
```r
# plot cumulative returns
chart.CumReturns(strat_returns["2020/"],
begin = "axis",
legend.loc = "topleft")
```
```r
chart.Drawdown(strat_returns["2020/"],
legend.loc = "bottomright")
```
```r
<table class=" lightable-classic" style='font-family: "Arial Narrow", "Source Sans Pro", sans-serif; margin-left: auto; margin-right: auto;'>
<caption>Performance metrics for buy &amp; hold asset allocation strategies</caption>
<thead>
<tr>
<th style="text-align:left;">   </th>
<th style="text-align:right;"> Annualized Return </th>
<th style="text-align:right;"> Annualized Std Dev </th>
<th style="text-align:right;"> Annualized Sharpe (Rf=0.68%) </th>
<th style="text-align:right;"> Annualised downside risk </th>
<th style="text-align:right;"> Sortino ratio </th>
<th style="text-align:right;"> Historical VaR (95%) </th>
<th style="text-align:right;"> Historical ES (95%) </th>
<th style="text-align:right;"> Maximum Drawdown </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> golden_butterfly </td>
<td style="text-align:right;"> 0.0721 </td>
<td style="text-align:right;"> 0.0795 </td>
<td style="text-align:right;"> 0.8194 </td>
<td style="text-align:right;"> 0.0507 </td>
<td style="text-align:right;"> 0.3774 </td>
<td style="text-align:right;"> -0.0289 </td>
<td style="text-align:right;"> -0.0503 </td>
<td style="text-align:right;"> 0.1663 </td>
</tr>
<tr>
<td style="text-align:left;"> rob_arnott </td>
<td style="text-align:right;"> 0.0664 </td>
<td style="text-align:right;"> 0.0761 </td>
<td style="text-align:right;"> 0.7777 </td>
<td style="text-align:right;"> 0.0493 </td>
<td style="text-align:right;"> 0.3548 </td>
<td style="text-align:right;"> -0.0302 </td>
<td style="text-align:right;"> -0.0443 </td>
<td style="text-align:right;"> 0.1194 </td>
</tr>
<tr>
<td style="text-align:left;"> globalAA </td>
<td style="text-align:right;"> 0.0652 </td>
<td style="text-align:right;"> 0.0677 </td>
<td style="text-align:right;"> 0.8578 </td>
<td style="text-align:right;"> 0.0417 </td>
<td style="text-align:right;"> 0.4069 </td>
<td style="text-align:right;"> -0.0266 </td>
<td style="text-align:right;"> -0.0379 </td>
<td style="text-align:right;"> 0.0930 </td>
</tr>
<tr>
<td style="text-align:left;"> permanent </td>
<td style="text-align:right;"> 0.0661 </td>
<td style="text-align:right;"> 0.0689 </td>
<td style="text-align:right;"> 0.8604 </td>
<td style="text-align:right;"> 0.0404 </td>
<td style="text-align:right;"> 0.4269 </td>
<td style="text-align:right;"> -0.0246 </td>
<td style="text-align:right;"> -0.0371 </td>
<td style="text-align:right;"> 0.1280 </td>
</tr>
<tr>
<td style="text-align:left;"> desert </td>
<td style="text-align:right;"> 0.0678 </td>
<td style="text-align:right;"> 0.0589 </td>
<td style="text-align:right;"> 1.0337 </td>
<td style="text-align:right;"> 0.0358 </td>
<td style="text-align:right;"> 0.4890 </td>
<td style="text-align:right;"> -0.0207 </td>
<td style="text-align:right;"> -0.0346 </td>
<td style="text-align:right;"> 0.1113 </td>
</tr>
<tr>
<td style="text-align:left;"> larry </td>
<td style="text-align:right;"> 0.0507 </td>
<td style="text-align:right;"> 0.0601 </td>
<td style="text-align:right;"> 0.7305 </td>
<td style="text-align:right;"> 0.0398 </td>
<td style="text-align:right;"> 0.3232 </td>
<td style="text-align:right;"> -0.0254 </td>
<td style="text-align:right;"> -0.0393 </td>
<td style="text-align:right;"> 0.1295 </td>
</tr>
<tr>
<td style="text-align:left;"> big_rocks </td>
<td style="text-align:right;"> 0.0520 </td>
<td style="text-align:right;"> 0.0769 </td>
<td style="text-align:right;"> 0.6032 </td>
<td style="text-align:right;"> 0.0526 </td>
<td style="text-align:right;"> 0.2577 </td>
<td style="text-align:right;"> -0.0298 </td>
<td style="text-align:right;"> -0.0526 </td>
<td style="text-align:right;"> 0.2249 </td>
</tr>
<tr>
<td style="text-align:left;"> sandwich </td>
<td style="text-align:right;"> 0.0609 </td>
<td style="text-align:right;"> 0.0916 </td>
<td style="text-align:right;"> 0.6025 </td>
<td style="text-align:right;"> 0.0627 </td>
<td style="text-align:right;"> 0.2612 </td>
<td style="text-align:right;"> -0.0383 </td>
<td style="text-align:right;"> -0.0623 </td>
<td style="text-align:right;"> 0.2895 </td>
</tr>
<tr>
<td style="text-align:left;"> balanced_tax </td>
<td style="text-align:right;"> 0.0463 </td>
<td style="text-align:right;"> 0.0801 </td>
<td style="text-align:right;"> 0.4934 </td>
<td style="text-align:right;"> 0.0559 </td>
<td style="text-align:right;"> 0.2161 </td>
<td style="text-align:right;"> -0.0347 </td>
<td style="text-align:right;"> -0.0558 </td>
<td style="text-align:right;"> 0.2704 </td>
</tr>
<tr>
<td style="text-align:left;"> balanced </td>
<td style="text-align:right;"> 0.0547 </td>
<td style="text-align:right;"> 0.0635 </td>
<td style="text-align:right;"> 0.7504 </td>
<td style="text-align:right;"> 0.0414 </td>
<td style="text-align:right;"> 0.3393 </td>
<td style="text-align:right;"> -0.0251 </td>
<td style="text-align:right;"> -0.0373 </td>
<td style="text-align:right;"> 0.1062 </td>
</tr>
<tr>
<td style="text-align:left;"> income_gr </td>
<td style="text-align:right;"> 0.0424 </td>
<td style="text-align:right;"> 0.0413 </td>
<td style="text-align:right;"> 0.8564 </td>
<td style="text-align:right;"> 0.0262 </td>
<td style="text-align:right;"> 0.3927 </td>
<td style="text-align:right;"> -0.0149 </td>
<td style="text-align:right;"> -0.0238 </td>
<td style="text-align:right;"> 0.0586 </td>
</tr>
<tr>
<td style="text-align:left;"> income_gr_tax </td>
<td style="text-align:right;"> 0.0402 </td>
<td style="text-align:right;"> 0.0494 </td>
<td style="text-align:right;"> 0.6790 </td>
<td style="text-align:right;"> 0.0330 </td>
<td style="text-align:right;"> 0.2973 </td>
<td style="text-align:right;"> -0.0181 </td>
<td style="text-align:right;"> -0.0332 </td>
<td style="text-align:right;"> 0.1437 </td>
</tr>
<tr>
<td style="text-align:left;"> con_income </td>
<td style="text-align:right;"> 0.0263 </td>
<td style="text-align:right;"> 0.0283 </td>
<td style="text-align:right;"> 0.6861 </td>
<td style="text-align:right;"> 0.0176 </td>
<td style="text-align:right;"> 0.3220 </td>
<td style="text-align:right;"> -0.0109 </td>
<td style="text-align:right;"> -0.0155 </td>
<td style="text-align:right;"> 0.0375 </td>
</tr>
<tr>
<td style="text-align:left;"> con_income_tax </td>
<td style="text-align:right;"> 0.0313 </td>
<td style="text-align:right;"> 0.0324 </td>
<td style="text-align:right;"> 0.7605 </td>
<td style="text-align:right;"> 0.0194 </td>
<td style="text-align:right;"> 0.3664 </td>
<td style="text-align:right;"> -0.0113 </td>
<td style="text-align:right;"> -0.0186 </td>
<td style="text-align:right;"> 0.0468 </td>
</tr>
<tr>
<td style="text-align:left;"> all_weather </td>
<td style="text-align:right;"> 0.0740 </td>
<td style="text-align:right;"> 0.0742 </td>
<td style="text-align:right;"> 0.9036 </td>
<td style="text-align:right;"> 0.0472 </td>
<td style="text-align:right;"> 0.4138 </td>
<td style="text-align:right;"> -0.0286 </td>
<td style="text-align:right;"> -0.0451 </td>
<td style="text-align:right;"> 0.1363 </td>
</tr>
<tr>
<td style="text-align:left;"> us_60_40 </td>
<td style="text-align:right;"> 0.0806 </td>
<td style="text-align:right;"> 0.0885 </td>
<td style="text-align:right;"> 0.8317 </td>
<td style="text-align:right;"> 0.0576 </td>
<td style="text-align:right;"> 0.3754 </td>
<td style="text-align:right;"> -0.0370 </td>
<td style="text-align:right;"> -0.0580 </td>
<td style="text-align:right;"> 0.2946 </td>
</tr>
</tbody>
</table>
```
```r
# plot cumulative returns
chart.CumReturns(strat_returns,
begin = "axis",
legend.loc = "topleft")
```
```r
# plot cumulative returns
chart.CumReturns(strat_returns,
begin = "axis",
legend.loc = "topleft")
```
```r
# drawdowns
chart.Drawdown(strat_returns,
legend.loc = "bottomright")
```
```r
# plot cumulative returns
chart.CumReturns(strat_returns["2020/"],
begin = "axis",
legend.loc = "topleft")
```
```r
chart.Drawdown(strat_returns["2020/"],
legend.loc = "bottomright")
```
